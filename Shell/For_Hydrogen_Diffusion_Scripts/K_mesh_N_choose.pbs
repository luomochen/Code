#PBS -N vasp_test
#PBS -l nodes=1:ppn=40
#PBS -q paraque3
#PBS -V
#PBS -o ./
#PBS -e ./
#PBS -S /bin/bash

#### Set intel environment###
source /opt/intel/composer_xe_2015/bin/compilervars.sh intel64
source /opt/intel/mkl/bin/intel64/mklvars_intel64.sh
source /opt/intel/impi/5.0.2.044/bin64/mpivars.sh

cd $PBS_O_WORKDIR
NP=`cat $PBS_NODEFILE | wc -l`
NN=`cat $PBS_NODEFILE | sort | uniq | tee /tmp/nodes.$$ | wc -l`
cat $PBS_NODEFILE > /tmp/nodefile.$$

# cd dir_test 先进入需要测试的文件夹。 
# 获取晶格常数并对晶格常数自动取整和进位。
a1=$(sed -n '3p' POSCAR | gawk '{print $1}')
a2=$(sed -n '3p' POSCAR | gawk '{print $2}')
a3=$(sed -n '3p' POSCAR | gawk '{print $3}')
a=$(echo "sqrt($a1^2 + $a2^2 + $a3^2)" | bc)
a_int=$(echo "scale = 0; $a + 1" | bc)

b1=$(sed -n '4p' POSCAR | gawk '{print $1}')
b2=$(sed -n '4p' POSCAR | gawk '{print $2}')
b3=$(sed -n '4p' POSCAR | gawk '{print $3}')
b=$(echo "sqrt($b1^2 + $b2^2 + $b3^2)" | bc)
b_int=$(echo "scale = 0; $b + 1" | bc)

c1=$(sed -n '5p' POSCAR | gawk '{print $1}')
c2=$(sed -n '5p' POSCAR | gawk '{print $2}')
c3=$(sed -n '5p' POSCAR | gawk '{print $3}')
c=$(echo "sqrt($c1^2 + $c2^2 + $c3^2)" | bc)
c_int=$(echo "scale = 0; $c + 1" | bc)

# 找出取整后最大的晶格常数。
if [ $a_int -ge $b_int ] 
then
    if [ $a_int -ge $c_int ] 
    then
        max_lattice_parameter="$a_int"
    else
        max_lattice_parameter="$c_int"
    fi
else
    if [ $a_int -ge $c_int ] 
    then
        max_lattice_parameter="$b_int"
    else
        if [ $b_int -ge $c_int ] 
        then
            max_lattice_parameter="$b_int"
        else
            max_lattice_parameter="$c_int"
        fi
    fi
fi

# 通过计算经验取值40和最大取整晶格常数差值获得循环次数。
diff=$[40 - $max_lattice_parameter + 1]
for((i=0;i<"$diff";i++));
do
    mkdir test"$i"
    cp origin/POSCAR origin/POTCAR origin/INCAR origin/KPOINTS test"$i" 
    integer=$[$max_lattice_parameter + $i]
    N_1=$(echo "scale = 0; $integer / $a" | bc)
    N_2=$(echo "scale = 0; $integer / $b" | bc)
    N_3=$(echo "scale = 0; $integer / $c" | bc)
    sed -i "4c $N_1 $N_2 $N_3" KPOINTS
    cd test"$i"||exit
    mpirun -genv I_MPI_DEVICE ssm -machinefile /tmp/nodefile.$$ -n $NP /opt/issp2/vasp/vasp5.4.4_std
    cd ..
done

rm -rf /tmp/nodefile.$$
rm -rf /tmp/nodes.$$
